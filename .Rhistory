diag.panel = hist.panel)
else pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor)
}
chart.Correlation.Qs(data)
?chart.Correlation
chart.Correlation.Qs(data)
chart.Correlation.Qs<-function (R, histogram = TRUE, method = c("pearson", "kendall",
"spearman"), ...)
{
x = checkData(R, method = "matrix")
if (missing(method))
method = method[1]
cormeth <- method
panel.cor <- function(x, y, digits = 2, prefix = "", use = "pairwise.complete.obs",
method = cormeth, cex.cor, ...) {
usr <- par("usr")
on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- cor(x, y, use = use, method = method)
txt <- format(c(r, 1), digits = digits)[1]
txt <- paste(prefix, txt, sep = "")
if (missing(cex.cor))
cex <- 1.8
test <- cor.test(as.numeric(x), as.numeric(y), method = method)
Signif <- symnum(test$p.value, corr = FALSE, na = FALSE,
cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1), symbols = c("***",
"**", "*", ".", " "))
text(0.5, 0.5, txt, cex = cex)
text(0.8, 0.8, Signif, cex = cex, col = 2)
}
f <- function(t) {
dnorm(t, mean = mean(x), sd = sd.xts(x))
}
dotargs <- list(...)
dotargs$method <- NULL
rm(method)
hist.panel = function(x, ... = NULL) {
par(new = TRUE)
hist(x, col = "gray", probability = TRUE, axes = FALSE,
main = "", breaks = "FD")
lines(density(x, na.rm = TRUE), col = "red", lwd = 1)
rug(x)
}
if (histogram)
pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor,
)
else pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor)
}
chart.Correlation.Qs(data)
chart.Correlation.Qs<-function (R, histogram = TRUE, method = c("pearson", "kendall",
"spearman"), ...)
{
x = checkData(R, method = "matrix")
if (missing(method))
method = method[1]
cormeth <- method
panel.cor <- function(x, y, digits = 2, prefix = "", use = "pairwise.complete.obs",
method = cormeth, cex.cor, ...) {
usr <- par("usr")
on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- cor(x, y, use = use, method = method)
txt <- format(c(r, 1), digits = digits)[1]
txt <- paste(prefix, txt, sep = "")
if (missing(cex.cor))
cex <- 1.8
test <- cor.test(as.numeric(x), as.numeric(y), method = method)
Signif <- symnum(test$p.value, corr = FALSE, na = FALSE,
cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1), symbols = c("***",
"**", "*", ".", " "))
text(0.5, 0.5, txt, cex = cex)
text(0.8, 0.8, Signif, cex = cex, col = 2)
}
f <- function(t) {
dnorm(t, mean = mean(x), sd = sd.xts(x))
}
dotargs <- list(...)
dotargs$method <- NULL
rm(method)
hist.panel = function(x, ... = NULL) {
par(new = TRUE)
hist(x, col = "gray", probability = TRUE, axes = FALSE,
main = "", breaks = "FD")
lines(density(x, na.rm = TRUE), col = "red", lwd = 1)
rug(x)
}
if (histogram)
pairs(x, gap = 0, lower.panel = panel.smooth, ,
diag.panel = hist.panel)
else pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor)
}
chart.Correlation.Qs(data)
chart.Correlation.Qs<-function (R, histogram = TRUE, method = c("pearson", "kendall",
"spearman"), ...)
{
x = checkData(R, method = "matrix")
if (missing(method))
method = method[1]
cormeth <- method
panel.cor <- function(x, y, digits = 2, prefix = "", use = "pairwise.complete.obs",
method = cormeth, cex.cor, ...) {
usr <- par("usr")
on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- cor(x, y, use = use, method = method)
txt <- format(c(r, 1), digits = digits)[1]
txt <- paste(prefix, txt, sep = "")
if (missing(cex.cor))
cex <- 1.8
test <- cor.test(as.numeric(x), as.numeric(y), method = method)
Signif <- symnum(test$p.value, corr = FALSE, na = FALSE,
cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1), symbols = c("***",
"**", "*", ".", " "))
text(0.5, 0.5, txt, cex = cex)
text(0.8, 0.8, Signif, cex = cex, col = 2)
}
f <- function(t) {
dnorm(t, mean = mean(x), sd = sd.xts(x))
}
dotargs <- list(...)
dotargs$method <- NULL
rm(method)
hist.panel = function(x, ... = NULL) {
par(new = TRUE)
hist(x, col = "gray", probability = TRUE, axes = FALSE,
main = "", breaks = "FD")
lines(density(x, na.rm = TRUE), col = "red", lwd = 1)
rug(x)
}
if (histogram)
pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor,
diag.panel = hist.panel)
else pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor)
}
chart.Correlation.Qs(data)
data<-read.table("clipboard",header=TRUE,fill=TRUE, na.strings = "")
#install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(data,method="pearson",histogram = TRUE,pch=19)
chart.Correlation.Qs<-function (R, histogram = TRUE, method = c("pearson", "kendall",
"spearman"), ...)
{
x = checkData(R, method = "matrix")
if (missing(method))
method = method[1]
cormeth <- method
panel.cor <- function(x, y, digits = 2, prefix = "", use = "pairwise.complete.obs",
method = cormeth, cex.cor, ...) {
usr <- par("usr")
on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- cor(x, y, use = use, method = method)
txt <- format(c(r, 1), digits = digits)[1]
txt <- paste(prefix, txt, sep = "")
if (missing(cex.cor))
cex <- 1.8
test <- cor.test(as.numeric(x), as.numeric(y), method = method)
Signif <- symnum(test$p.value, corr = FALSE, na = FALSE,
cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1), symbols = c("***",
"**", "*", ".", " "))
text(0.5, 0.5, txt, cex = cex)
text(0.8, 0.8, Signif, cex = cex, col = 2)
}
f <- function(t) {
dnorm(t, mean = mean(x), sd = sd.xts(x))
}
dotargs <- list(...)
dotargs$method <- NULL
rm(method)
hist.panel = function(x, ... = NULL) {
par(new = TRUE)
hist(x, col = "gray", probability = TRUE, axes = FALSE,
main = "", breaks = "FD")
lines(density(x, na.rm = TRUE), col = "red", lwd = 1)
rug(x)
}
if (histogram)
pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor,
diag.panel = hist.panel)
else pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor)
}
chart.Correlation.Qs(data)
data<-read.table("clipboard",header=TRUE,fill=TRUE, na.strings = "")
#install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(data,method="pearson",histogram = TRUE,pch=19)
chart.Correlation.Qs<-function (R, histogram = TRUE, method = c("pearson", "kendall",
"spearman"), ...)
{
x = checkData(R, method = "matrix")
if (missing(method))
method = method[1]
cormeth <- method
panel.cor <- function(x, y, digits = 2, prefix = "", use = "pairwise.complete.obs",
method = cormeth, cex.cor, ...) {
usr <- par("usr")
on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- cor(x, y, use = use, method = method)
txt <- format(c(r, 1), digits = digits)[1]
txt <- paste(prefix, txt, sep = "")
if (missing(cex.cor))
cex <- 1.8
test <- cor.test(as.numeric(x), as.numeric(y), method = method)
Signif <- symnum(test$p.value, corr = FALSE, na = FALSE,
cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1), symbols = c("***",
"**", "*", ".", " "))
text(0.5, 0.5, txt, cex = cex)
text(0.8, 0.8, Signif, cex = cex, col = 2)
}
f <- function(t) {
dnorm(t, mean = mean(x), sd = sd.xts(x))
}
dotargs <- list(...)
dotargs$method <- NULL
rm(method)
hist.panel = function(x, ... = NULL) {
par(new = TRUE)
hist(x, col = "gray", probability = TRUE, axes = FALSE,
main = "", breaks = "FD")
lines(density(x, na.rm = TRUE), col = "red", lwd = 1)
rug(x)
}
if (histogram)
pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor,
diag.panel = hist.panel)
else pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor)
}
chart.Correlation.Qs(data)
data
data<-read.table("clipboard",header=TRUE,fill=TRUE, na.strings = "")
#install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(data,method="pearson",histogram = TRUE,pch=19)
chart.Correlation.Qs<-function (R, histogram = TRUE, method = c("pearson", "kendall",
"spearman"), ...)
{
x = checkData(R, method = "matrix")
if (missing(method))
method = method[1]
cormeth <- method
panel.cor <- function(x, y, digits = 2, prefix = "", use = "pairwise.complete.obs",
method = cormeth, cex.cor, ...) {
usr <- par("usr")
on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- cor(x, y, use = use, method = method)
txt <- format(c(r, 1), digits = digits)[1]
txt <- paste(prefix, txt, sep = "")
if (missing(cex.cor))
cex <- 1.8
test <- cor.test(as.numeric(x), as.numeric(y), method = method)
Signif <- symnum(test$p.value, corr = FALSE, na = FALSE,
cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1), symbols = c("***",
"**", "*", ".", " "))
text(0.5, 0.5, txt, cex = cex)
text(0.8, 0.8, Signif, cex = cex, col = 2)
}
f <- function(t) {
dnorm(t, mean = mean(x), sd = sd.xts(x))
}
dotargs <- list(...)
dotargs$method <- NULL
rm(method)
hist.panel = function(x, ... = NULL) {
par(new = TRUE)
hist(x, col = "gray", probability = TRUE, axes = FALSE,
main = "", breaks = "FD")
lines(density(x, na.rm = TRUE), col = "red", lwd = 1)
rug(x)
}
if (histogram)
pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor,
diag.panel = hist.panel)
else pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor)
}
chart.Correlation.Qs(data)
chart.Correlation.Qs<-function (R, histogram = TRUE, method = c("pearson", "kendall",
"spearman"), ...)
{
x = checkData(R, method = "matrix")
if (missing(method))
method = method[1]
cormeth <- method
panel.cor <- function(x, y, digits = 2, prefix = "", use = "pairwise.complete.obs",
method = cormeth, cex.cor, ...) {
usr <- par("usr")
on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- cor(x, y, use = use, method = method)
txt <- format(c(r, 1), digits = digits)[1]
txt <- paste(prefix, txt, sep = "")
if (missing(cex.cor))
cex <- 2.8
test <- cor.test(as.numeric(x), as.numeric(y), method = method)
Signif <- symnum(test$p.value, corr = FALSE, na = FALSE,
cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1), symbols = c("***",
"**", "*", ".", " "))
text(0.5, 0.5, txt, cex = cex)
text(0.8, 0.8, Signif, cex = cex, col = 2)
}
f <- function(t) {
dnorm(t, mean = mean(x), sd = sd.xts(x))
}
dotargs <- list(...)
dotargs$method <- NULL
rm(method)
hist.panel = function(x, ... = NULL) {
par(new = TRUE)
hist(x, col = "gray", probability = TRUE, axes = FALSE,
main = "", breaks = "FD")
lines(density(x, na.rm = TRUE), col = "red", lwd = 1)
rug(x)
}
if (histogram)
pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor,
diag.panel = hist.panel)
else pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor)
}
chart.Correlation.Qs(data)
data<-read.table("clipboard",header=TRUE,fill=TRUE, na.strings = "")
#install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(data,method="pearson",histogram = TRUE,pch=19)
chart.Correlation.Qs<-function (R, histogram = TRUE, method = c("pearson", "kendall",
"spearman"), ...)
{
x = checkData(R, method = "matrix")
if (missing(method))
method = method[1]
cormeth <- method
panel.cor <- function(x, y, digits = 2, prefix = "", use = "pairwise.complete.obs",
method = cormeth, cex.cor, ...) {
usr <- par("usr")
on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- cor(x, y, use = use, method = method)
txt <- format(c(r, 1), digits = digits)[1]
txt <- paste(prefix, txt, sep = "")
if (missing(cex.cor))
cex <- 2.8
test <- cor.test(as.numeric(x), as.numeric(y), method = method)
Signif <- symnum(test$p.value, corr = FALSE, na = FALSE,
cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1), symbols = c("***",
"**", "*", ".", " "))
text(0.5, 0.5, txt, cex = cex)
text(0.8, 0.8, Signif, cex = cex, col = 2)
}
f <- function(t) {
dnorm(t, mean = mean(x), sd = sd.xts(x))
}
dotargs <- list(...)
dotargs$method <- NULL
rm(method)
hist.panel = function(x, ... = NULL) {
par(new = TRUE)
hist(x, col = "gray", probability = TRUE, axes = FALSE,
main = "", breaks = "FD")
lines(density(x, na.rm = TRUE), col = "red", lwd = 1)
rug(x)
}
if (histogram)
pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor,
diag.panel = hist.panel)
else pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor)
}
chart.Correlation.Qs(data)
data<-read.table("clipboard",header=TRUE,fill=TRUE, na.strings = "")
#install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(data,method="pearson",histogram = TRUE,pch=19)
chart.Correlation.Qs<-function (R, histogram = TRUE, method = c("pearson", "kendall",
"spearman"), ...)
{
x = checkData(R, method = "matrix")
if (missing(method))
method = method[1]
cormeth <- method
panel.cor <- function(x, y, digits = 2, prefix = "", use = "pairwise.complete.obs",
method = cormeth, cex.cor, ...) {
usr <- par("usr")
on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- cor(x, y, use = use, method = method)
txt <- format(c(r, 1), digits = digits)[1]
txt <- paste(prefix, txt, sep = "")
if (missing(cex.cor))
cex <- 2.8
test <- cor.test(as.numeric(x), as.numeric(y), method = method)
Signif <- symnum(test$p.value, corr = FALSE, na = FALSE,
cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1), symbols = c("***",
"**", "*", ".", " "))
text(0.5, 0.5, txt, cex = cex)
text(0.8, 0.8, Signif, cex = cex, col = 2)
}
f <- function(t) {
dnorm(t, mean = mean(x), sd = sd.xts(x))
}
dotargs <- list(...)
dotargs$method <- NULL
rm(method)
hist.panel = function(x, ... = NULL) {
par(new = TRUE)
hist(x, col = "gray", probability = TRUE, axes = FALSE,
main = "", breaks = "FD")
lines(density(x, na.rm = TRUE), col = "red", lwd = 1)
rug(x)
}
if (histogram)
pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor,
diag.panel = hist.panel)
else pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor)
}
data<-read.table("clipboard",header=TRUE,fill=TRUE, na.strings = "")
#install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(data,method="pearson",histogram = TRUE,pch=19)
shiny::runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
install.packages("tidyr")
runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
get_data_from_hplc<-function(filename=NULL){
mydata<-lapply(1:length(filename), function(x){
file.name<-filename[x]
mydata<-read.table(file.name,sep = "\t",fileEncoding = "UTF-8")
mydata<-as.vector(as.matrix(mydata))
mydata<-mydata[nchar(mydata)>20]
location<-mydata[3]
location<-unlist(strsplit(location,""))
location<-paste(location[-grep(" ",location)],collapse="")
myse<-NULL
for(i in 1:length(mydata)){
myline<-str_trim(mydata[i], side = c("both"))
myjudge<-all(unlist(strsplit(str_trim(substr(myline,1,3)),""))%in%c("0","1","2","3","4","5","6","7","8","9","0"))
if(myjudge) myse<-rbind(myse,myline)
}
####
myse2<-NULL
for(i in 1:nrow(myse)){
unit<-unlist(strsplit(myse[i]," "))
unit<-unit[nchar(unit)>0]
unit<-unit[-grep("[A-Z]",unit)]
myse2<-rbind(myse2,unit)
}
myse3<-as.data.frame(myse2)
colnames(myse3)<-c("peak#","retention time(min)","peak width(min)","peak area(mAUs)","peak height(mAU)","peak area(%)")
rownames(myse3)<-1:nrow(myse3)
myse3$location<-location
return(myse3)
})
mydata1<-do.call(rbind,mydata)
return(mydata1)
}
runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
remotes::install_github("rstudio/htmltools")
remotes::install_github("rstudio/htmltools")
remotes::install_github("rstudio/htmltools")
remotes::install_github("rstudio/htmltools")
remotes::install_github("rstudio/shiny")
remotes::install_github("rstudio/shiny")
remotes::install_github("rstudio/shiny")
remotes::install_github("rstudio/shiny")
remotes::install_github("rstudio/thematic")
shiny::runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
shiny::runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
shiny::runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
shiny::runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
remotes::install_github("rstudio/shiny")
remotes::install_github("rstudio/shiny")
remotes::install_github("rstudio/shiny")
install.packages("shiny")
shiny::runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
shiny::runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
shiny::runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
shiny::runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
install.packages("tkrplot", type="source")
shiny::runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
install.packages("Rcpp")
shiny::runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='zhaoqingsong',
token='B719EA349B8CAC3CF3155FF1BA13376C',
secret='<SECRET>')
rsconnect::setAccountInfo(name='zhaoqingsong',
token='B719EA349B8CAC3CF3155FF1BA13376C',
secret='YS6Ecjv9ZNHMQxlhyjsxleRyE9lPFaAF2jfyS/qU')
library(rsconnect)
rsconnect::deployApp('path/to/your/app')
rsconnect::deployApp('E:/FangCloudSync/R_WD360/HPLC_shiny/')
rsconnect::deployApp()
shiny::runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
shiny::runApp('E:/FangCloudSync/R_WD360/HPLC_shiny')
shiny::runApp()
shiny::runApp()
runApp()
runApp()
source('C:/Users/thinkpad/Desktop/HPLC_shiny_2021_1_7/getDataFromHPLC.R', echo=TRUE)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
